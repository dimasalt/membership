<?php

namespace Membership\Controllers;

use Membership\Helpers\AccountHelper;
use Membership\Helpers\ProgramHelper;
use Membership\Libraries;


class ProgramController extends BaseController
{
    /******************************************************
     * //              main product page
     *******************************************************/
    public function Index($request, $response, $args)
    {
        $program_id = $args['program_id'];
        $has_access = false;
        $is_admin = false;

        //get program information
        $progHelper = new ProgramHelper();
        $program_info = $progHelper->getProgramInfoById($program_id);


        //if program is free program
        if ($program_info['is_free'] == 1) {
            $program_categories = $progHelper->getProgramItems($program_id);
            return $this->getView()->render('Program/index.twig', array(
                'program_categories' => $program_categories,
                'program_info' => $program_info
            ));
        }

        //if user logged in, belongs to program or is admin
        if (isset($_SESSION['token']) && isset($_COOKIE['token'])) {
            $acHelper = new AccountHelper();
            $user = $acHelper->getUserByToken($_SESSION['token']);

            $is_admin = $acHelper->is_inRole($user['user_id'], 'admin');
            $has_access = $progHelper->is_UserInProgram($user['user_id'], $program_id);

            //check if user has access to program and if yes get the program items
            if ($has_access || $is_admin) {

                //write member actions logs
                $logger = new Libraries\LoggingLibrary();
                $logger->LogMemberAction('Program page', 'Visited program: ' . $program_info["name"]);

                //get categories to display
                $program_categories = $progHelper->getProgramItems($program_id);
                return $this->getView()->render('Program/index.twig', array(
                    'program_categories' => $program_categories,
                    'program_info' => $program_info
                ));
            }
        }

        if($has_access == false && $is_admin == false) {
            return $response->withRedirect($program_info["sales_url"]);
        }

        //return $response->withRedirect('/login');

        //if nothing of the above is true
        //        return $this->getView()->render('Program/index.twig', array(
        //            'program_info' => $program_info
        //        ));
    }


    /******************************************
     *          display specific video
     * *****************************************/
    public function DisplayItem($request, $response, $args)
    {
        //get variable
        $program_id = $args['program_id'];
        $item_id = $args['item_id'];


        //get program information
        $progHelper = new ProgramHelper();

        $program_info = $progHelper->getProgramInfoById($program_id);
        $program_item = $progHelper->getSpecificItem($item_id);

        //write member actions logs
        $logger = new Libraries\LoggingLibrary();
        $logger->LogMemberAction('Program page', 'Visited program: ' . $program_info["name"] . ', item: ' . $program_item["name"]);

        return $this->getView()->render('Program/item.twig', array(
            'program_info' => $program_info,
            'program_item' => $program_item
        ));
    }


    /******************************************************
     *              download item attachment
     * ***************************************************/
    public function GetFile($request, $response, $args)
    {
        $program_id = $args['program_id'];
        $file_id = $args['file_id'];

        $progHeler = new ProgramHelper();
        $file_item = $progHeler->getDownloadFile($file_id);//

        var_dump($file_item);


        if ($file_item != false) {

            //write member actions logs
            $logger = new Libraries\LoggingLibrary();
            $logger->LogMemberAction('File Download', 'downloaded file: ' . $file_item["name"]);

            $file = INC_ROOT . $file_item['location'];

            $fp = fopen($file, 'rb');

            header("Content-Type: application/octet-stream");
            header("Content-Disposition: attachment; filename=" . $file_item['name']);
            header("Content-Length: " . filesize($file));

            fpassthru($fp);
        }
    }
}
